use com.basis.api.admin.BBjAdminSet
use com.basis.api.admin.BBjAdminServer
use com.basis.api.admin.BBjAdminServer.ServerType
use com.basis.api.admin.BBjAdminWebAppServer_1700

class public AdminBaseHandler

    field private BBjAdminBase adminBase!

    method public AdminBaseHandler()
    methodend

    method public void setAdminBase(BBjAdminBase adminBase!)
        #adminBase! = adminBase!
    methodend
    
    method public String getPort(Boolean useSSL!)
        if #adminBase! = null() then
            methodret ""
        endif
        
        if useSSL! then
            declare auto BBjAdminWebAppServer_1700 server!
            server! = #adminBase!.getWebAppServer()

            name! =  server!.getSSLNames().get(0)

            declare auto BBjAdminSSLInfo info!
            info! = server!.getSSLInfo(name!)

            methodret info!.getString(BBjAdminSSLInfo.PORT)        
        endif
        
        declare BBjAdminSet adminSet!
        adminSet! = #adminBase!.getServerConfigurations(ServerType.WEB)
        
        declare BBjAdminServer server!
        server! = cast(BBjAdminServer, adminSet!.iterator().next())

        methodret server!.getString(BBjAdminServer.PORT)
    methodend
    
    rem /**
    rem  * Returns the jnlp application's codebase string:
    rem  * {-scheme-}://{-hostname-}:{-portnumber-}{-path-}
    rem  * 
    rem  * @return the jnlp's codebase string
    rem  */
    method public String getCodeBase()
        scheme! = #getScheme()
        hostname! = #getHostName()
        port! = #getPort(scheme!.equals("https"))
        
        methodret scheme! + "://" + hostname! + ":" + port! + "/"
    methodend

    rem /**
    rem  * Returns the server's hostname.
    rem  * 
    rem  * @return the server's hostname.
    rem  */
    method public String getHostName()
        if #adminBase! = null() then
            methodret ""
        endif
        
        declare BBjAdminSet adminSet!
        adminSet! = #adminBase!.getServerConfigurations(ServerType.WEB)

        declare BBjAdminServer server!
        server! = cast(BBjAdminServer, adminSet!.iterator().next())

        methodret server!.getString(BBjAdminServer.HOST_NAME)
    methodend
    
    rem /**
    rem  * Returns http:// in case HTTP is enabled, else
    rem  * https:// is returned.
    rem  * 
    rem  * @return the scheme to use for the download urls.
    rem  */
    method public String getScheme()
        if #adminBase! = null() then
            methodret ""
        endif
        
        declare BBjAdminWebAppServer_1500 server!
        server! = #adminBase!.getWebAppServer()
        
        declare BBjAdminSet adminSet!
        adminSet! = #adminBase!.getServerConfigurations(ServerType.WEB)

        declare BBjAdminServer server!
        server! = cast(BBjAdminServer, adminSet!.iterator().next())

        if Boolean.valueOf(server!.getString(BBjAdminServer.ENABLE_HTTP)) then
            methodret "http"
        endif
        
        methodret "https"
    methodend
    
    method public String getServerREV()
        if #adminBase! = null() then
            methodret ""
        endif
        
        declare BBjAdminConfiguration conf!
        conf! = #adminBase!.getConfiguration()

        declare BBjAdminProperty property!

        declare Iterator it!
        it! = conf!.getAdminProperties().iterator()

        while(it!.hasNext())
            property! = cast(BBjAdminProperty, it!.next())

            if(property!.getString(BBjAdminProperty.NAME).equals("com.basis.bbj.version")) then
                methodret property!.getValue().toString().trim()
            endif
        wend

        methodret ""
    methodend
    
    rem /**
    rem  * Returns a BBjVector with all available JNLP Configurations
    rem  * 
    rem  * @return vector! The vector object with all the JNLP Configurations 
    rem  */
    method public BBjVector getJnlpApplications()
        if #adminBase! = null() then
            methodret new BBjVector()
        endif
        
        declare BBjAdminJnlpConfiguration jnlpConfirguration!
        jnlpConfiguration! = #adminBase!.getJnlpConfiguration()

        declare auto BBjAdminList list!
        list! = jnlpConfiguration!.getApplications()

        declare BBjVector vector!
        vector! = new BBjVector()

        it! = list!.iterator()
        while(it!.hasNext())
            vector!.addItem(it!.next())
        wend

        methodret vector!
    methodend

classend